{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13620\viewh18720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Scripts used to generate simulation results\
\
Folder 1: generate_results (scripts used to generate results of paper)\
1. SimpleSScalcs.R: script used to obtain approximate sample sizes needed\
2. create_sim_bank.py: script used to create community simulations, with and without an enacted NPI intervention.\
3. search_ss_ttest.py: algorithm to find sufficient number of clusters one generation after intervention when performing a two-sample Welch's t-test (unequal variances).\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 4. search_ss_ttest_gen2.py: algorithm to find sufficient number of clusters two generations after intervention when performing a two-sample Welch's t-test (unequal variances).\
5. search_ss_ttest_gen3.py: algorithm to find sufficient number of clusters three generations after intervention when performing a two-sample Welch's t-test (unequal variances).\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 6. search_ss_M_S.py: algorithm to find sufficient number of clusters when matching on number of susceptible individuals and performing a paired one-sample t-test on the differences of the outcome.\
7. search_ss_M_SER.py: algorithm to find sufficient number of clusters when matching on number of non-infectious individuals and performing a paired one-sample t-test on the differences of the outcome.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Folder 2: generate_tables (scripts used to generate tables of paper)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 8. get_ttest_csv.R: script to create csv of ttest results (one generation after intervention)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 9. get_ttest_rerun_csv.R: script to create csv of ttest rerun results (one generation after intervention)\
10. get_ttest_gen2_csv.R: script to create csv of ttest results (two generations after intervention)\
11. get_ttest_gen3_csv.R: script to create csv of ttest results (three generations after intervention)\
12. get_M_S_csv.R: script to create csv of ttest results matching on susceptible individuals\
13. get_M_SER_csv.R: script to create csv of ttest results matching on non-infectious individuals\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Folder 3: create_figures (scripts used to create figures of paper)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 14. distribution_of_infectious.py: script used to create figure of the distribution of infectious individuals at time of intervention\
15. simulation_figure.py: script used to create the figures showing the simulations trajectories. NPI effect and transmission rate (R0) parameters were changed for each of the three panels.\
\
Folder 4: test_stability (scripts used to test the sensitivity and stability of the algorithm)\
15. transmission_stability.py: script used to test stability of identified transmission rate}